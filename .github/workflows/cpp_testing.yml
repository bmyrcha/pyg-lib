name: C++ Testing

on: [workflow_dispatch]

jobs:

  gtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repostiory
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup packages
        uses: ./.github/actions/setup

      - name: Configure
        run: |
          MKL_VERSION=2023.1.0
          pip install mkl==${MKL_VERSION} mkl-include==${MKL_VERSION} mkl-devel==${MKL_VERSION} mkl-static==${MKL_VERSION}

          mkdir build
          cd build
          
          echo "================================"
          echo "Searching for MKLConfig.cmake..."
          find /opt -type f -name MKLConfig.cmake
          
          export MKL_DIR=`python -c 'import os;import sysconfig;data=sysconfig.get_path("data");print(f"{data}{os.sep}lib{os.sep}cmake{os.sep}mkl")'`
          
          Torch_DIR=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` cmake .. -GNinja -DBUILD_TEST=ON -DWITH_COV=ON -DCMAKE_BUILD_TYPE=DEBUG -DUSE_MKL_BLAS=ON -DMKL_DIR=${MKL_DIR}
          cd ..

      - name: Build
        run: |
          cd build
          cmake --build .
          cd ..
      - name: My backup
        if: ${{ failure() }}
        run: |
          # nm --demangle --dynamic /home/runner/work/pyg-lib/pyg-lib/build/libpyg.so | grep -i mkl
          strings /home/runner/work/pyg-lib/pyg-lib/build/libpyg.so | grep -i viRng

      - name: Run tests
        run: |
          cd build
          ctest --verbose --output-on-failure
          cd ..

      - name: Collect coverage
        run: |
          sudo apt-get install lcov
          lcov --directory . --capture --output-file .coverage.info
          lcov --remove .coverage.info '*/test/*' --output-file .coverage.info

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: .coverage.info
          fail_ci_if_error: false
